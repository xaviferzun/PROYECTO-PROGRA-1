/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Pantallas;

import Logica.Utilitario;
import Modelos.Album;
import Modelos.Artista;
import Modelos.Cancion;
import Modelos.Genero;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class dialogGeneros extends javax.swing.JDialog {
   
    DefaultListModel modeloListaGeneros = new DefaultListModel();
    
    
    //Variable para verificar si el usuario está usando el botón "Modificar"
    private boolean modificando = false; 
    
    //Variable de instancia para almacenar el Artista actual
    private Album albumActual;
    private Artista artistaActual;
    private Genero generoActual;
    

    /**
     * Creates new form dialogArtistas
     */
    public dialogGeneros(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        
        lstGeneros.setModel(modeloListaGeneros);
        actualizarListaGeneros();
        
    }

    private dialogGeneros(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreGenero = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnInsertar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstGeneros = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jScrollPane3.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(856, 638));
        jPanel1.setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Descripción");

        txtNombreGenero.setEditable(false);
        txtNombreGenero.setBackground(new java.awt.Color(255, 255, 255));
        txtNombreGenero.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombreGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreGeneroActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Nombre");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnInsertar.setText("Insertar");
        btnInsertar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInsertar.setMaximumSize(new java.awt.Dimension(81, 23));
        btnInsertar.setMinimumSize(new java.awt.Dimension(81, 23));
        btnInsertar.setPreferredSize(new java.awt.Dimension(98, 23));
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        btnAceptar.setText("Aceptar");
        btnAceptar.setEnabled(false);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.setMaximumSize(new java.awt.Dimension(81, 23));
        btnEliminar.setMinimumSize(new java.awt.Dimension(81, 23));
        btnEliminar.setPreferredSize(new java.awt.Dimension(98, 23));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        lstGeneros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstGeneros.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstGenerosValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(lstGeneros);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Géneros");

        txtDescripcion.setColumns(20);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setRows(5);
        txtDescripcion.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtDescripcion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInsertar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAceptar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(txtNombreGenero)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(177, 177, 177))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 133, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //Eliminar artista seleccionado de la lista
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        generoSeleccionado();
        eliminarGenero(generoActual);
        actualizarListaGeneros();
        limpiarCajas();
    }//GEN-LAST:event_btnEliminarActionPerformed
    
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        generoSeleccionado();
        if (modificando == true) { //Verifica si el usuario está usando el botón de modificar
            modificarGenero(generoActual);
        } else {
            agregarGenero();
        }
        actualizarListaGeneros();
        deshabilitarCajas();
        btnAceptar.setEnabled(false);
        modificando = false;
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        modificando = false;
        habilitarCajas();
        limpiarCajas();
        btnAceptar.setEnabled(true);
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        modificando = true;
        obtenerInfoGenero(generoActual);
        habilitarCajas();
        btnAceptar.setEnabled(true);    
    }//GEN-LAST:event_btnModificarActionPerformed

    private void txtNombreGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreGeneroActionPerformed
           
    }//GEN-LAST:event_txtNombreGeneroActionPerformed

    private void lstGenerosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstGenerosValueChanged
        generoSeleccionado();
        //albumSeleccionado();
        obtenerInfoGenero(generoActual);
        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);        
    }//GEN-LAST:event_lstGenerosValueChanged

    
    
    /**
    * Este método se utiliza para seleccionar un género de la lista de géneros.
    * Si el índice del género seleccionado no es -1, entonces el género actual se establece en el género en el índice seleccionado.
    */
    private void generoSeleccionado(){
        int indiceGenero = lstGeneros.getSelectedIndex();
        if (indiceGenero != -1){
            this.generoActual = Utilitario.listaGeneros.get(indiceGenero);
        }
    }
    
    //Toma el indice seleccionado del ComboBox Albumes
    /*private void albumSeleccionado(){
        int indiceAlbum = cmbAlbumes.getSelectedIndex();
        if (indiceAlbum != -1){
            this.albumActual = Artista.getListaAlbumes().get(indiceAlbum);
        }
    }
    
    //Toma el indice seleccionado del ComboBox Artistas
    /*private void artistaSeleccionado(){
        int indiceArtista = cmbAlbumes.getSelectedIndex();
        if (indiceArtista != -1){
            Artista artista = Utilitario.listaArtistas.get(indiceArtista);
            this.artistaActual = artista;
        }
    }*/
    
    /**
    * Este método se utiliza para obtener la información del género proporcionado.
    * @param genero El género cuya información se va a obtener.
    */
    private void obtenerInfoGenero(Genero genero){
       txtNombreGenero.setText(genero.getNombre());
       txtDescripcion.setText(genero.getDescripcion());
    }
    
    /**
    * Este método se utiliza para agregar un nuevo género a la lista de géneros.
    * Si alguno de los campos requeridos está vacío, se muestra un mensaje de error.
    */
    private void agregarGenero(){
        if (txtNombreGenero.getText().isEmpty() || 
            txtDescripcion.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Error: Se deben llenar todos los campos requeridos.", "Campos Vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }
       Genero genero = new Genero(
        txtNombreGenero.getText(),
        txtDescripcion.getText());
        Utilitario.listaGeneros.add(genero);
    }
    
    /**
    * Este método se utiliza para eliminar un género de la lista de géneros.
    * @param genero El género que se va a eliminar.
    */
    private void eliminarGenero(Genero genero){
        int indice = lstGeneros.getSelectedIndex();
        if (indice != -1) {
            genero = Utilitario.listaGeneros.get(indice);
            Utilitario.listaGeneros.remove(genero);
        }
    }
    
    /**
    * Este método se utiliza para modificar la información del género proporcionado.
    * Si alguno de los campos requeridos está vacío, se muestra un mensaje de error.
    * @param genero El género cuya información se va a modificar.
    */
    private void modificarGenero(Genero genero){
        if (txtNombreGenero.getText().isEmpty() || 
            txtDescripcion.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Error: Se deben llenar todos los campos requeridos.", "Campos Vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int indice = lstGeneros.getSelectedIndex();
        if (indice != -1) {
            genero.setNombre(txtNombreGenero.getText());
            genero.setDescripcion(txtDescripcion.getText());
        }        
    }
    
    
    /**
    * Este método se utiliza para actualizar la lista de géneros.
    * Primero, se limpia la lista visualmente antes de volver a cargarla, evitando el duplicado visual de información.
    */
    private void actualizarListaGeneros(){
        modeloListaGeneros.clear(); //Limpiar la lista visualmente antes de volver a cargarla, evitando el duplicado visual de informacion
        modeloListaGeneros.addAll(Utilitario.generarListaGeneros());
    }
    
    
    /**
    * Este método se utiliza para deshabilitar las cajas de texto para la descripción y el nombre del género.
    */
    private void deshabilitarCajas(){
        txtDescripcion.setEditable(false);
        txtNombreGenero.setEditable(false);
    }
    
    
    /**
    * Este método se utiliza para habilitar las cajas de texto para la descripción y el nombre del género.
    */
    private void habilitarCajas(){
        txtDescripcion.setEditable(true);
        txtNombreGenero.setEditable(true);
    }
    
    /**
    * Este método se utiliza para limpiar todas las cajas de texto.
    */
    private void limpiarCajas(){
        txtDescripcion.setText("");
        txtNombreGenero.setText("");
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dialogGeneros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dialogGeneros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dialogGeneros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dialogGeneros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dialogGeneros dialog = new dialogGeneros(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAceptar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> lstGeneros;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtNombreGenero;
    // End of variables declaration//GEN-END:variables
}
